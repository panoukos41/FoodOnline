@page "/stores/{OwnerId}"

@using FoodOnline.Domain.Stores.Models
@using static FoodOnline.WebClient.Business.Services.ApiStores

@inject IFlurlClient http
@inject NavigationManager navigation

<main class="container">
    <AuthorizeView Roles="Admin, Employee, StoreOwner">
        <NotAuthorized>
            <div class="row h-100 justify-content-center align-items-center">
                <NoAccess />
            </div>
        </NotAuthorized>

        <Authorized>
            @if (OwnerStores.IsNullOrEmpty())
            {
                <div class="row h-100 justify-content-center align-items-center">
                    <Loading />
                </div>
            }
            else
            {
                <ul class="list-group">
                    @foreach (var store in OwnerStores)
                    {
                        <li class="list-group-item d-flex align-items-center">
                            <div class="ml-1 mr-auto">
                                <h3>@store.Name <small style="font-size: medium">(@store.Address)</small></h3>
                            </div>
                            <a class="btn btn-secondary mx-1" href="edit/@store.Id">Edit Store</a>
                            <a class="btn btn-primary mx-1" href="store/@store.Id">Go To Store</a>
                        </li>
                    }
                </ul>
            }

            @code {
                protected override async Task OnInitializedAsync()
                {
                    OwnerStores = await http.GetOwnerStores(OwnerId);
                    if (OwnerStores.Count() == 1) navigation.NavigateTo($"store/{OwnerStores.ElementAt(1).Id}");
                }
            }
        </Authorized>
    </AuthorizeView>
</main>

@code {
    [Parameter]
    public string OwnerId { get; set; }

    private IEnumerable<StoreListModel> OwnerStores { get; set; }
}